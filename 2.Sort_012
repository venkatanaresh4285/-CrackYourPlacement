https://leetcode.com/problems/sort-colors/

Apperoach 1:

void sortColors(vector<int>& nums) {
        int n=nums.size();
        int cn1=0;
        int cn2=0;
        int cn3=0;
        for(int i=0;i<n;i++){
              if(nums[i]==0){
                 cn1++;
              }
              else if(nums[i]==1){
                  cn2++;
              }
              else
                 cn3++;
        }
        for(int i=0;i<cn1;i++){
            nums[i]=0;
        }
        for(int i=cn1;i<cn1+cn2;i++){
            nums[i]=1;
        }
        for(int i=cn1+cn2;i<n;i++){
            nums[i]=2;
        }
    }

Apperoacvh 2:
Dutch National Flag Algorithm 
Intuition
The problem requires us to sort an array of integers representing colors in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue. We are given that the colors red, white, and blue are represented by the integers 0, 1, and 2 respectively.

Approach : Dutch National Flag algorithm

Complexity
Time complexity: O(n)
Space complexity: O(1)
 void sortColors(vector<int>& nums) {
    int low=0,mid=0,high=nums.size()-1;
    while(mid<=high){
        if(nums[mid]==0){
            swap(nums[low],nums[mid]);
            low++;
            mid++;
        }
        else if(nums[mid]==1){
           mid++;
        }
        else{
            swap(nums[mid],nums[high]);
           high--;
        }
    }
}
